<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"

	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	 	http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">


	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${c3p0.driverClass}" />
		<property name="jdbcUrl" value="${c3p0.jdbcUrl}" />
		<property name="user" value="${c3p0.username}" />
		<property name="password" value="${c3p0.passwd}" />
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}" />
		<property name="minPoolSize" value="${c3p0.minPoolSize}" />
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
		<property name="acquireIncrement" value="${c3p0.acquireIncrement}" />
		<property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" />
		<property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}" />
		<property name="maxStatements" value="${c3p0.maxStatements}" />
		<property name="maxStatementsPerConnection" value="${c3p0.maxStatementsPerConnection}" />
	</bean>
	<!-- 数据源配置 -->
	<bean id="dataSourceSpring"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${c3p0.driverClass}"></property>
		<property name="url" value="${c3p0.jdbcUrl}"></property>
		<property name="username" value="${c3p0.username}"></property>
		<property name="password" value="${c3p0.passwd}"></property>
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- hibernate实体类配置 -->
		<!-- <property name="packagesToScan"> -->
		<!-- <list> -->
		<!-- <value>com.jt.gateway.entity</value> -->

		<!-- <value>com.zxh.ssq.entity</value> -->
		<!-- </list> -->
		<!-- </property> -->

		<property name="mappingLocations">
			<list>
				<value>classpath*:com/jt/bean/gateway/*.hbm.xml</value>
				<value>classpath*:com/jt/keyword/bean/*.hbm.xml</value>
				<value>classpath*:com/jt/scene/bean/*.hbm.xml</value>
			</list>
		</property>

		<!-- hibernate相关参数配置 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.jdbc.batch_size">100</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>
	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 定义事务管理拦截器 -->
	<bean id="baseTransactionProxyBean" lazy-init="true"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="execute*">PROPAGATION_REQUIRED</prop>
				<prop key="query*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>


	<!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->


	<!-- <bean id="jdbcDao" class="com.jt.gateway.dao.impl.JdbcDaoImpl"> -->
	<!-- <property name="sdbdriver" value="${c3p0.driverClass}"></property> -->
	<!-- <property name="sconnStr" value="${c3p0.jdbcUrl}"></property> -->
	<!-- <property name="user" value="${c3p0.username}"></property> -->
	<!-- <property name="passwd" value="${c3p0.passwd}"></property> -->
	<!-- </bean> -->



	<bean id="dao" class="com.jt.gateway.dao.impl.DaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 开始 -->




	<!-- 看不懂干吗用的先注释 <context:component-scan base-package="com.jt.crawler.admin.dao.impl"> 
		</context:component-scan> <context:component-scan base-package="com.jt.crawler.admin.service.impl"> 
		</context:component-scan> -->



	<bean id="jobInfImpl" parent="baseTransactionProxyBean">
		<property name="target">
			<bean class="com.jt.gateway.service.job.JobInfImpl" autowire="byName">
			</bean>
		</property>
	</bean>

	<bean id="jobLogImpl" parent="baseTransactionProxyBean">
		<property name="target">
			<bean class="com.jt.gateway.service.job.JobLogImpl" autowire="byName">
			</bean>
		</property>
	</bean>

	<bean id="gwFieldImpl" parent="baseTransactionProxyBean">
		<property name="target">
			<bean class="  com.jt.gateway.service.job.GwFieldImpl" autowire="byName">
			</bean>
		</property>
	</bean>

	<bean id="sceneServiceImpl" parent="baseTransactionProxyBean">
		<property name="target">
			<bean class=" com.jt.scene.service.impl.SceneServiceImpl" autowire="byName">
			</bean>
		</property>
	</bean>


	<bean id="indexDao" class=" com.jt.lucene.IndexDao" init-method="initInSpring">
		<property name="indexPath" value="${lucene.indexPath}" />
	</bean>



	<bean id="searchService" class="com.jt.nlp.service.LuceneSearchService" autowire="byName">
				<property name="dao" ref="indexDao" />
	</bean>

	<bean id="qaService" class="com.jt.nlp.service.QAService" init-method="initNlp">
		<property name="searchService" ref="searchService">
			
		</property>
	</bean>



	<bean id="jobRunningLogImpl" class="com.jt.gateway.service.job.JobRunningLogImpl"></bean>



	<bean id="keyWordService" parent="baseTransactionProxyBean">
		<property name="target">
			<bean class="com.jt.keyword.service.impl.KeyWordServiceImpl"
				autowire="byName">
			</bean>
		</property>
	</bean>

	<bean id="jobInit" class="com.jt.gateway.service.management.JobInit"
		init-method="init">
		<property name="jobService" ref="jobInfImpl"></property>
	</bean>


	<!-- <bean id="springTest" class="com.jt.test.spring.SpringTest" init-method="test"> -->
	<!-- <property name="pro" value="testpro"></property> -->
	<!-- </bean> -->
</beans>